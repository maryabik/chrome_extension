{"version":3,"sources":["components/BubbleChart/BubbleChart.tsx","components/Pagination/Pagination.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["uuid","require","BubbleChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","forceData","simulation","setForceData","d","i","bubblesData","length","push","size","animateBubbles","simulatePositions","data","d3","nodes","velocityDecay","force","strength","radiusScale","on","setState","value","range","domain","minValue","maxValue","fx","renderBubbles","map","item","index","assertThisInitialized","fontSize","content","name","category","strokeColor","backgroundColor","react_default","a","createElement","key","concat","transform","width","x","height","y","style","cursor","r","fill","fillColor","stroke","strokeWidth","onClick","selectedCircle","alert","className","textFillColor","textAnchor","fontWeight","dy","state","prevProps","prevState","JSON","stringify","Fragment","aria-hidden","id","background","React","PureComponent","Pagination","_ref","postsPerPage","totalPosts","paginate","pageNumbers","Math","ceil","number","href","App","res","_useState","useState","_useState2","slicedToArray","setData","_React$useState","slice","_React$useState2","data1","setData1","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState7","_useState8","word","setWord","_useState9","_useState10","password","setPassword","_useState11","_useState12","isLoading","indexOfLastPost","indexOfFirstPost","currentPosts","_useState13","_useState14","show","setShow","_useState15","_useState16","show1","setShow1","_useState17","_useState18","show2","setShow2","_useState19","_useState20","inputValue","setInputValue","_useState21","_useState22","setId","initialState","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","sent","stop","apply","arguments","fetchPosts","check","console","log","status","getPassword","then","response","changePassword","document","getElementById","Button","variant","color","sort","random","type","aria-label","aria-describedby","onChange","e","target","BubbleChart_BubbleChart_BubbleChart","toConsumableArray","components_Pagination_Pagination","pageNumber","article","choices","url","requestOptions","method","headers","Content-Type","body","fetch","error","setWords","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8eff24a7.chunk.js","sourcesContent":["/*\nAuthor: Eli Elad Elrom\nWebsite: https://EliElrom.com\nLicense: MIT License\nComponent: src/component/BubbleChart/BubbleChart.tsx\n*/\n\nimport React, { RefObject } from 'react'\nimport './BubbleChart.css'\nimport * as d3 from 'd3'\nimport {Types} from \"./types\";\nimport {index, Simulation, SimulationNodeDatum} from \"d3\"; // yarn add d3 @types/d3\n\nconst  uuid = require('react-uuid')\nimport { Button } from '@material-ui/core'\nimport './BubbleChart.css'\n\nexport default class BubbleChart extends React.PureComponent<IBubbleChartProps, IBubbleChartState> {\n\n  public forceData: Types.ForceData[]\n  private simulation: Simulation<SimulationNodeDatum, undefined> | undefined\n\n\n  constructor(props: IBubbleChartProps) {\n    super(props)\n    this.state = {\n      data: []\n    }\n    this.forceData = this.setForceData(props)\n  }\n\n  componentDidMount() {\n    this.animateBubbles()\n  }\n\n  componentDidUpdate(prevProps: IBubbleChartProps, prevState: IBubbleChartState) {\n    if (JSON.stringify(prevProps.bubblesData) !== JSON.stringify(this.props.bubblesData)) {\n      this.forceData = this.setForceData(this.props)\n      this.animateBubbles()\n    }\n  }\n\n  setForceData = (props: IBubbleChartProps) => {\n    const d = []\n    for (let i = 0; i < props.bubblesData.length; i++) {\n      // @ts-ignore\n      d.push({'size': props.bubblesData[i].size})\n    }\n    return d\n}\n\n  animateBubbles = () => {\n    if(this.props.bubblesData.length > 0) {\n      this.simulatePositions(this.forceData)\n    }\n  }\n  simulatePositions = (data: Types.ForceData[]) => {\n    this.simulation = d3\n        .forceSimulation()\n        .nodes(data as SimulationNodeDatum[])\n        .velocityDecay( 0.05)\n        . force('x', d3.forceX().strength(0.2))\n        . force('y', d3.forceY().strength(0.2))\n        .force(\n            'collide,',\n            d3.forceCollide((d) => {\n              return this.radiusScale((d as Types.ForceData).size)\n            })\n        )\n        .on('tick', () =>{\n          this.setState({data})\n        })\n  }\n  radiusScale = (value: d3.NumberValue) => {\n    const  fx = d3\n        .scaleSqrt()\n        .range([1, 50])\n        .domain([this.props.minValue, this.props.maxValue])\n    return fx(value)\n  }\n  renderBubbles = (data: [])=> {\n    return data.map((item : Types.ForceDataComplete, index) => {\n      const {props} = this\n      const fontSize = this.radiusScale((item as unknown as Types.ForceData).size) / 3\n      const content = props.bubblesData.length > index ? props.bubblesData[index].name : ''\n      const category = props.bubblesData[index].category\n      const strokeColor = props.bubblesData.length > index ? 'black' : this.props.backgroundColor\n      return (\n         <g\n             key={`g=${uuid}`}\n             transform={`translate(${this.props.width/2 + item.x - 70}, ${this.props.height/2 + item.y})`}\n         >\n           <circle\n               style={{cursor: 'pointer'}}\n               r={this.radiusScale(item.size)}\n               fill={props.bubblesData[index].fillColor}\n               stroke={strokeColor}\n               strokeWidth=\"2\"\n               onClick={() => {\n                 this.props.selectedCircle(category)\n                 alert(\"You have selected:\"+content)\n               }}\n           />\n           <text\n               className=\"bubbleText\"\n           fill={this.props.textFillColor}\n           textAnchor=\"middle\"\n           fontSize={`${fontSize}px`}\n           fontWeight=\"normal\"\n           dy=\"10\"\n           >\n             {content}\n           </text>\n         </g>\n      )\n    })\n  }\n  render() {\n\n    return (\n        <>\n          <div>\n            {/*<Button*/}\n            {/*    className=\"buttonFixed\"*/}\n            {/*    variant=\"contained\"*/}\n            {/*    color=\"default\"*/}\n            {/*    onClick={() => {*/}\n            {/*      this.animateBubbles();*/}\n            {/*    }}*/}\n            {/*>*/}\n            {/*  Animate*/}\n            {/*</Button>*/}\n\n            <div aria-hidden=\"true\" id=\"chart\" style={{background: this.props.backgroundColor, cursor: 'pointer'}}>\n              <svg width={this.props.width}\n                   height={this.props.height}>\n                {this.renderBubbles(this.state.data as [])}\n              </svg>\n            </div>\n          </div>\n        </>\n    )\n  }\n}\n\ninterface IBubbleChartProps {\n  bubblesData: Types.Data[]\n  width: number\n  height: number\n  backgroundColor: string\n  textFillColor: string\n  minValue: number\n  maxValue: number\n  selectedCircle: (content: string) => void\n}\n\ninterface IBubbleChartState {\n  data: Types.ForceData[]\n\n}","import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate}) => {\n    const pageNumbers = [];\n\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        // @ts-ignore\n        pageNumbers.push(i);\n    }\n\n    return (\n        <>\n            <nav>\n                <ul className='pagination'>\n                    {pageNumbers.map(number => (\n                        <li\n                            key={number}\n                            className='page-item'\n                        >\n                            <a\n                                onClick={() => paginate(number)}\n                                href='#'\n                                className='page-link'\n                            >\n                                {number}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </>\n    );\n};\n\nexport default Pagination;\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\n\nimport './App.css';\n\nimport {Button, Card, Input} from '@material-ui/core';\nimport {Link, Route, Routes, useNavigate, BrowserRouter as Router} from 'react-router-dom';\nimport {Types} from \"./components/BubbleChart/types\";\n\nimport BubbleChart from \"./components/BubbleChart/BubbleChart\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport axios from \"axios\"\n\nimport Generated_password from \"./components/Generated_password/Generated_password\";\nimport Navigation from \"./components/Navigation/Navigation\";\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [data1, setData1] = React.useState<Types.Data[]>(data.slice(1, 10))\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [word, setWord] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\n\n  //show components\n  const [show, setShow] = useState(false)\n  const [show1, setShow1] = useState(false)\n  const [show2, setShow2] = useState(false)\n  const [inputValue, setInputValue] = useState(\"\")\n  const [id, setId] = useState(\"\")\n  let res;\n  let i = 0;\n  let initialState = [];\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      // @ts-ignore\n      res = await axios.get('https://hidden-journey-03583.herokuapp.com/getWords?number=100');\n      setData(res.data);\n      setPassword(initialState);\n      setInputValue(\"\");\n    };\n    fetchPosts();\n  }, []);\n\n  const changeData = () => {\n    setData1(data1.slice(1, 100).sort(() => Math.random() - 0.5))\n  }\n\n  const setWords = () => {\n    console.log(inputValue)\n    console.log(password);\n\n    let testWords =   {\n      \"choices\": [\"animals\", \"animals\", \"clothes\", \"animals\", \"animals\", \"animals\", \"animals\", \"sports\", \"games\", \"food\", \"9\", \"1\", \":(\", \":)\"]\n    }\n    const article = { choices: word };\n\n    let url = 'https://hidden-journey-03583.herokuapp.com/buildModel?client_id='+id;\n    console.log(article);\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(article)\n      };\n      // console.log(testWords);\n      fetch(url, requestOptions)\n          .then(r => check(r))\n    } catch (error) {\n     console.log(error)\n    }\n\n  }\n\n  const check = (r) => {\nconsole.log(r.status)\nconsole.log(\"check\")\n    if (r.status == 200) {\n        // setLoading(false);\n      if(word.length < 14){\n        alert(\"You have selected less than required words from the bubble clouds. You selected a total of \" + word.length + \" out of 14 words\")\n      } else {\n        getPassword();\n        setShow2(false)\n        setShow1(true)\n      }\n    }\n  }\n\n  const getPassword = () => {\n      axios.get('https://hidden-journey-03583.herokuapp.com/generatePassword/?n=3&client_id=' + id)\n          .then(response => setPassword(response.data))\n  }\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n\n  const selectedKeyHandler = (key: string) => {\n\n    // @ts-ignore\n    setWord([...word, key])\n  }\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber)\n  }\n\n  const changePassword = () => {\n    console.log(\"Changing password\")\n    i++;\n    console.log(i)\n    if(i < password.length){\n      // @ts-ignore\n      document.getElementById('pcount').value = password[i];\n    }\n    else if(i >= password.length - 1) {\n      getPassword()\n    }\n  };\n\n  const setCharts = () => {\n    setShow(true)\n    console.log(id)\n  }\n\n  const continuePassword = () => {\n    setShow2(true)\n    setShow1(false)\n    getPassword()\n    console.log(id)\n  }\n\n  // @ts-ignore\n  return (\n    <div className=\"App\">\n      <h1>Word Cloud</h1>\n      <header className=\"App-header\">\n        <Button\n            className=\"appButtonFixed\"\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => {\n              changeData()\n            }}\n        >\n          Spread Out Bubbles\n        </Button>\n\n        <div className=\"input-group mb-3 id\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Participant's ID</span>\n        </div>\n        <input\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            value={id}\n            onChange={e => setId(e.target.value)}\n        />\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => setCharts()}>Start</button>\n          <br />\n          <button type=\"button\" className=\"btn btn-dark twoo\" onClick={() => continuePassword()}>Generate Password</button>\n    </div>\n\n        {\n          show?\n              <><BubbleChart\n                  bubblesData={currentPosts}\n                  width={800}\n                  height={400}\n                  textFillColor=\"white\"\n                  minValue={1}\n                  maxValue={150}\n                  backgroundColor=\"white\"\n                  selectedCircle={selectedKeyHandler}\n              />\n                <div><h1 className=\"textP\">{currentPage}/14</h1></div>\n                <Pagination\n                  postsPerPage={postsPerPage}\n                  totalPosts={data.length}\n                  paginate={paginate}\n                />\n                <button type=\"submit\" onClick={() => setWords()}>Generate Password</button>\n              </>\n\n          :null\n\n        }\n\n          <div className=\"card\">\n            {\n              show1?\n            <div className=\"card-body\">\n              <h6 className=\"card-subtitle mb-2 text-muted\">Password Card</h6>\n              <p className=\"card-text\">Check for interested password or reload for a new password.</p>\n              <input\n                  className=\"pcount\"\n                  id = \"pcount\"\n                  type=\"text\"\n                  value={password[0]}\n                  // onChange={e => setInputValue(e.target.value)}\n              />\n              {/*<CopyToClipboard text={inputValue} onCopy={() => setInputValue.length != 0 ? alert(\"Password Copied!\") : null}>*/}\n              {/*  <button>Copy</button>*/}\n              {/*</CopyToClipboard>*/}\n\n              <br />\n\n              <div className=\"icons\">\n              <button  className=\"card-link\" onClick={() => changePassword()}><i className=\" icon fa fa-refresh fa-spin\"></i></button>\n              <button  className=\"card-link\" onClick={() => alert(\"You have selected this password\" + inputValue)}><i className=\" icon fa fa-check\"></i></button>\n              </div>\n            </div>\n                  :null\n            }\n          </div>\n\n        <div className=\"card\">\n          {\n            show2?\n                <div className=\"card-body\">\n                  <h6 className=\"card-subtitle mb-2 text-muted\">Password Card</h6>\n                  <p className=\"card-text\">Check for interested password or reload for a new password.</p>\n                  <input\n                      className=\"pcount\"\n                      id = \"pcount\"\n                      type=\"text\"\n                      value={password[0]}\n                      // onChange={e => setInputValue(e.target.value)}\n                  />\n                  {/*<CopyToClipboard text={inputValue} onCopy={() => setInputValue.length != 0 ? alert(\"Password Copied!\") : null}>*/}\n                  {/*  <button>Copy</button>*/}\n                  {/*</CopyToClipboard>*/}\n\n                  <br />\n\n                  <div className=\"icons\">\n                    <button  className=\"card-link\" onClick={() => changePassword()}><i className=\" icon fa fa-refresh fa-spin\"></i></button>\n                    <button  className=\"card-link\" onClick={() => alert(\"You have selected this password\" + inputValue)}><i className=\" icon fa fa-check\"></i></button>\n                  </div>\n                </div>\n                :null\n          }\n        </div>\n\n      </header>\n    </div>\n\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}